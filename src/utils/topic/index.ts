/**
 * Creates a topic to listen to deposit confirmation events
 *
 * @param {string} sourceModule - Module of the source chain: evm | axelarnet (cosmos)
 * @param {string} depositAddress -  Deposit address generated by axelar
 * @returns {string} Returns a topic that can be listened to with websockets
 */
export function buildDepositConfirmationTopic(
  sourceModule: string,
  depositAddress: string
): string {
  const topic = {
    type: "deposit-confirmation",
    sourceModule,
    depositAddress,
  };

  return JSON.stringify(topic, Object.keys(topic).sort());
}

/**
 * Creates a topic to listen to link generation events
 *
 * @param {string} sourceModule - Module of the source chain: evm | axelarnet (cosmos)
 * @param {string} destinationChainIdentifier - Name of the destination chain. eg: terra (cosmos) | avalanche (evm)
 * @param {string} destinationAddress - Blockchain specific address where the final funds should be transfered to
 * @param {string} assetCommonKey - Common key of the asset to be transfered. eg: uusd
 * @returns {string} Returns a topic that can be listened to with websockets
 */
export function buildLinkTopic(
  sourceModule: string,
  destinationChainIdentifier: string,
  destinationAddress: string, // user public address
  assetCommonKey: string
): string {
  const topic = {
    type: "link",
    sourceModule,
    destinationChainIdentifier,
    destinationAddress,
    assetCommonKey,
  };

  return JSON.stringify(topic, Object.keys(topic).sort());
}
